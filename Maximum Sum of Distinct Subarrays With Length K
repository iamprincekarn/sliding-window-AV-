class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        
        if(nums.size()<k)
        return 0;
        long long sum = 0;
        unordered_map<int,int>mp;

        for(int i=0;i<k;i++)
        {
            mp[nums[i]]++;
            sum+=nums[i];
        }
        long long ans = 0;
        if(mp.size() == k)
        ans = max(ans,sum);
       
        for(int i=k;i<nums.size();i++)
        {
            sum-=nums[i-k];
            sum+=nums[i];
            
            mp[nums[i-k]]--;
            mp[nums[i]]++;

            if(mp[nums[i-k]] == 0) mp.erase(nums[i-k]);

            if(mp.size() == k)
            ans = max(ans,sum);
        }
        return ans;
    }
};
